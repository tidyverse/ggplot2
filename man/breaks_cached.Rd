% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/breaks_cached.R
\name{breaks_cached}
\alias{breaks_cached}
\title{Cache scale breaks}
\usage{
breaks_cached(breaks)
}
\arguments{
\item{breaks}{A function that takes the limits as input and returns breaks
as output. See \code{\link[=continuous_scale]{continuous_scale()}} for details.}
}
\value{
A wrapped breaks function suitable for use with ggplot scales.
}
\description{
This helper caches the output of another breaks function the first time it is
evaluated. All subsequent calls will return the same breaks vector
regardless of the provided limits. In general this is not what you want
since the breaks should change when the limits change. It is helpful in the
specific case that you are using \code{follow.scale} on \code{\link[=stat_bin]{stat_bin()}} and related
binning stats, because it ensures that the breaks are not recomputed after
they are used to define the bin edges.
}
\examples{
discoveries_df <- data.frame(
  year = unlist(mapply(rep, time(discoveries), discoveries))
)
p <- ggplot(discoveries_df, aes(year)) +
 geom_histogram(follow.scale = "minor")

# Using follow.scale with function breaks can cause misalignment as the scale
# can update the breaks after the bin edges are fixed by the stat
p + scale_x_continuous(breaks = scales::breaks_extended())

# Wrapping the same breaks function avoids this issue but can leave you with
# sub-optimal breaks since they are no longer updated after stats
p + scale_x_continuous(breaks = breaks_cached(scales::breaks_extended()))
}
