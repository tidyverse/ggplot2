% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scale-hue.r
\name{scale_colour_discrete}
\alias{scale_colour_discrete}
\alias{scale_fill_discrete}
\title{Discrete colour scales}
\usage{
scale_colour_discrete(
  ...,
  type = getOption("ggplot2.discrete.colour", getOption("ggplot2.discrete.fill"))
)

scale_fill_discrete(
  ...,
  type = getOption("ggplot2.discrete.fill", getOption("ggplot2.discrete.colour"))
)
}
\arguments{
\item{...}{Additional parameters passed on to the scale type,}

\item{type}{One of the following:
\itemize{
\item A character vector of color codes. The codes are used for a 'manual' color
scale as long as the number of codes exceeds the number of data levels
(if there are more levels than codes, \code{\link[=scale_colour_hue]{scale_colour_hue()}}/\code{\link[=scale_fill_hue]{scale_fill_hue()}}
are used to construct the default scale).
\item A list of character vectors of color codes. The minimum length vector that exceeds the
number of data levels is chosen for the color scaling. This is useful if you
want to change the color palette based on the number of levels.
\item A function that returns a discrete colour/fill scale (e.g., \code{\link[=scale_fill_hue]{scale_fill_hue()}},
\code{\link[=scale_fill_brewer]{scale_fill_brewer()}}, etc).
}}
}
\description{
Colour scales for discrete data default to the values of the \code{ggplot2.discrete.fill}
and \code{ggplot2.discrete.colour} options. By default these scales attempt to use
a colour-blind safe (or a custom) palette, but if the number of levels is
large, they fallback to \code{\link[=scale_fill_hue]{scale_fill_hue()}}/\code{\link[=scale_colour_hue]{scale_colour_hue()}}.
}
\examples{
# Template function for creating densities grouped by a variable
cty_by_var <- function(var) {
  ggplot(mpg, aes(cty, colour = factor({{var}}), fill = factor({{var}}))) +
    geom_density(alpha = 0.2)
}
# The default color scale for three levels
cty_by_var(class)

# Define custom palettes for when there are 1-2, 3, or 4-6 levels
opts <- options(
  ggplot2.discrete.fill = list(
    c("skyblue", "orange"),
    RColorBrewer::brewer.pal(3, "Set2"),
    RColorBrewer::brewer.pal(6, "Accent")
  )
)
cty_by_var(year)
cty_by_var(drv)
cty_by_var(fl)
cty_by_var(class)
options(opts)

}
