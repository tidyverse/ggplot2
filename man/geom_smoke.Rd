% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/geom-smoke.r, R/stat-smoke.r
\name{geom_smoke}
\alias{geom_smoke}
\alias{geom_smoke2}
\alias{stat_smoke}
\title{Display a smoke plot.}
\usage{
geom_smoke(mapping = NULL, data = NULL, stat = "smoke",
  position = "identity", na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE, ...)

geom_smoke2(mapping = NULL, data = NULL, stat = "density",
  adjust = NULL, position = "identity", na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE, ...)

stat_smoke(mapping = NULL, data = NULL, geom = "area",
  position = "stack", adjust = NULL, kernel = "gaussian", trim = FALSE,
  na.rm = FALSE, show.legend = NA, inherit.aes = TRUE, ...)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link{aes}} or
\code{\link{aes_}}. If specified and \code{inherit.aes = TRUE} (the
default), is combined with the default mapping at the top level of the
plot. You only need to supply \code{mapping} if there isn't a mapping
defined for the plot.}

\item{data}{A data frame. If specified, overrides the default data frame
defined at the top level of the plot.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{na.rm}{If \code{FALSE} (the default), removes missing values with
a warning.  If \code{TRUE} silently removes missing values.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link{borders}}.}

\item{...}{other arguments passed on to \code{\link{layer}}. There are
  three types of arguments you can use here:

  \itemize{
  \item Aesthetics: to set an aesthetic to a fixed value, like
     \code{color = "red"} or \code{size = 3}.
  \item Other arguments to the layer, for example you override the
    default \code{stat} associated with the layer.
  \item Other arguments passed on to the stat.
  }}

\item{adjust}{see \code{\link{density}} for details}

\item{geom,stat}{Use to override the default connection between
\code{geom_smoke} and \code{stat_smoke}.}

\item{kernel}{kernel used for density estimation, see
\code{\link{density}} for details}

\item{trim}{This parameter only matters if you are displaying multiple
densities in one plot. If \code{FALSE}, the default, each density is
computed on the full range of the data. If \code{TRUE}, each density
is computed over the range of that group: this typically means the
estimated x values will not line-up, and hence you won't be able to
stack density values.}
}
\description{
A smoke plot is several superimposed kernel density estimates,
each with a low transparency.  They are  useful for displaying
the distribution of variables with small and large scale
structure.
}
\section{Aesthetics}{

  \Sexpr[results=rd,stage=build]{ggplot2:::rd_aesthetics("geom",
  "density")}
}

\section{Computed variables}{

\describe{
  \item{density}{density estimate}
  \item{count}{density * number of points - useful for stacked density
     plots}
  \item{scaled}{density estimate, scaled to maximum of 1}
}
}
\examples{
theme_set(theme_bw())

# smoke and smoke2 do the same thing for
# univariate visualizations with no other
# aesthetics, but smoke is faster than smoke2.
# see below for smoke2's uses.
ggplot(diamonds, aes(carat)) +
  geom_smoke()

last_plot() + geom_density()


set.seed(10)
x <- c(rnorm(200), rnorm(30, 2, .1))
qplot(x, geom = "density")
qplot(x, geom = "smoke")
qplot(x, geom = "histogram")


set.seed(1)
x <- c(rnorm(200), rnorm(50, 0, .025))
qplot(x, geom = "density")
qplot(x, geom = "smoke")
qplot(x, geom = "histogram")


ggplot(diamonds, aes(carat)) +
  geom_smoke(adjust = c(.5, 1, 2), alpha = 1/3)



\dontrun{ geom_smoke2 is rather slow; this cuts down check time

# here's where smoke2 shines
# note the spikes - the rug shows that the
# data is in fact quite discrete
ggplot(diamonds, aes(depth, fill = cut)) +
  geom_smoke2() + geom_rug() +
  xlim(55, 70)


# ..count.. reserves marginal densities (see ?geom_density)
ggplot(diamonds, aes(carat, ..count.., fill = cut)) +
  geom_smoke2(position = "stack")


# You can use position="fill" to produce a conditional density estimate
ggplot(diamonds, aes(carat, ..count..)) +
  geom_smoke2(aes(fill = cut), position = "fill") +
  xlim(0, 3)
}
}
\seealso{
See \code{\link{geom_histogram}},
  \code{\link{geom_freqpoly}}, and \code{\link{geom_density}} for
  other methods of displaying continuous distribution. See
  \code{\link{geom_violin}} for a compact density display.
}

